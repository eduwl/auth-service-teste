{
  "openapi": "3.0.0",
  "info": {
    "description": "Auth Service Endpoints",
    "version": "1.0.2",
    "title": "Auth Service",
    "contact": {
      "email": "apiteam@swagger.io"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "tags": [
    {
      "name": "Authorization",
      "description": "Authorization Endpoints"
    }
  ],
  "externalDocs": {
    "description": "Find out more about Swagger",
    "url": "http://swagger.io"
  },
  "servers": [
    {
      "url": "http://localhost:8000/fake"
    }
  ],
  "paths": {
    "/health": {
      "get": {
        "tags": [
          "Health"
        ],
        "summary": "Health Check",
        "description": "Checa o estado atual da aplicação",
        "operationId": "HalthController",
        "responses": {
          "200": {
            "description": "Verifica a aplicação",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HealthResponse"
                }
              }
            }
          }
        }
      }
    },
    "/token": {
      "post": {
        "tags": [
          "Login"
        ],
        "summary": "Login",
        "description": "Realiza o login de um usuário gerando um token.",
        "operationId": "LoginController",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "username": {
                    "type": "string",
                    "description": "Nome do usuário"
                  },
                  "password": {
                    "type": "string",
                    "description": "Senha do usuário"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Login realizado com sucesso.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponse"
                }
              }
            }
          },
          "400": {
            "description": "Faltando informação para o login no body.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "description": "Mensagem de erro."
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Usuário ou senha inválidos.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "description": "Mensagem de erro."
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Payload inválido",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "description": "Mensagem de erro."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Erro Interno",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "description": "Mensagem de erro."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/admin": {
      "get": {
        "tags": [
          "Admin"
        ],
        "summary": "Admin role route.",
        "description": "Rota que pode ser chamada somente pela role admin.",
        "operationId": "AdminController",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token JWT após realizar o login em /fake/token",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Saudações ao admin.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdminResponse"
                }
              }
            }
          },
          "401": {
            "description": "Token inválido ou não foi encontrado.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "description": "Mensagem de erro"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "A role não esta correta para essa rota.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "description": "Mensagem de erro"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/user": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "User role route.",
        "description": "Rota que pode ser chamada somente pela role user.",
        "operationId": "UserController",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token JWT após realizar o login em /fake/token",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Saudações ao User.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponse"
                }
              }
            }
          },
          "401": {
            "description": "Token inválido ou não foi encontrado.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "description": "Mensagem de erro"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "A role não esta correta para essa rota.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "description": "Mensagem de erro"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "HealthResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          }
        }
      },
      "LoginResponse": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "description": "Token de autenticação da sessão."
          }
        }
      },
      "AdminResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          }
        }
      },
      "UserResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          }
        }
      }
    }
  }
}